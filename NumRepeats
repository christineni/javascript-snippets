/* Write a method that takes in a string and returns the number of
# letters that appear more than once in the string. You may assume
# the string contains only lowercase letters. Count the number of
# letters that repeat, not the number of times they repeat in the
# string.
#
# Difficulty: hard.
*/

function num_repeats(string) {
  var s = string.split("");
  var a= [];
  var count = [];
  for (var i=0; i < s.length; i++) {
    if (!a.includes(s[i])) {
      a.push(s[i]);
    }
    else if (!count.includes(s[i])){
      count.push(s[i]);
    }
    else {
      continue;
    }
    
  }
  console.log(count)
  return count.length;
}

num_repeats('aaa');
num_repeats('abdbc');
num_repeats('abab');
num_repeats('cadac');
num_repeats('abcde');


/*
# These are tests to check that your code is working. After writing
# your solution, they should all print true.
puts("\nTests for #num_repeats")
puts("===============================================")
    puts('num_repeats("abdbc") == 1: ' + (num_repeats('abdbc') == 1).to_s)
    # one character is repeated
    puts('num_repeats("aaa") == 1: ' + (num_repeats('aaa') == 1).to_s)
    puts('num_repeats("abab") == 2: ' + (num_repeats('abab') == 2).to_s)
    puts('num_repeats("cadac") == 2: ' + (num_repeats('cadac') == 2).to_s)
    puts('num_repeats("abcde") == 0: ' + (num_repeats('abcde') == 0).to_s)
puts("===============================================")
*/
